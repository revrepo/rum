/*************************************************************************
 *
 * REV SOFTWARE CONFIDENTIAL
 *
 * [2013] - [2015] Rev Software, Inc.
 * All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Rev Software, Inc. and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Rev Software, Inc.
 * and its suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Rev Software, Inc.
 */

/*********** For SysLog Integration **********/
var winston = require('winston');
require('winston-syslog2');
// require('winston-syslog2').Syslog;
var conf = require("../../config/config");


winston.setLevels(winston.config.syslog.levels);
winston.addColors(winston.config.syslog.colors);


var transport = new winston.transports.Syslog({
  // levels:winston.config.syslog.levels,
  level: conf.logging.syslog_level,
  id: 'hello syslog',
  facility: 'user',
  prettyPrint: true,
  colorize: true,
  showPid: true
});

var delogger = new(winston.Logger)({
  transports: [
    new(winston.transports.File)({
      filename: conf.logging.debug_log_file_path,
      level: 'debug',
      colorize: true,
      facility: 'user',
      json: false,
      prettyPrint: true,
      showPid: true
    })
  ]
});

var logger = new winston.Logger({
  transports: [transport]
});

/*********** For SysLog Integration **********/

exports.log = function (level, msg) {

  // If global API service logging level is set to DEBUG then log all messages to a local log file
  // (including all non-DEBUG messages)

  if (conf.logging.syslog_level == "debug") {
    delogger.log(level, msg);
  }

  // If the message log level is not DEBUG then send it to syslog
  // (so all DEBUG messages will be written to a local log file only)

  if (level != "debug") {
    logger.log(level, msg);
  }
};
